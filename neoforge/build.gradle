plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

configurations {
    shadow
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
    inputs.property "META-INF/mods.toml", project.version
}

dependencies {
    minecraft("com.mojang:minecraft:${rootProject.architectury.minecraft}")
    mappings(loom.officialMojangMappings())
    neoForge("net.neoforged:neoforge:${project.neoforge_version}")
    modImplementation("me.shedaniel.cloth:cloth-config-neoforge:${rootProject.cloth_config_version}")
    modImplementation("dev.architectury:architectury-neoforge:${rootProject.architectury_version}")

    implementation(project(path: ":common", configuration: "namedElements")) {
        transitive = false
    }
    developmentNeoForge(project(path: ":common", configuration: "namedElements")) {
        transitive = false
    }
    shadow(project(path: ":common", configuration: "transformProductionNeoForge")) {
        transitive = false
    }
}

shadowJar {
    relocate "me.shedaniel.lightoverlay.common", "me.shedaniel.lightoverlay.common.neoforge"
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadow]
    archiveClassifier = "shadow"
}

remapJar {
    dependsOn(shadowJar)
    inputFile.set(shadowJar.archivePath)
    archiveClassifier = "neoforge"
}
